!function(e){function r(e,r,o){return 4===arguments.length?t.apply(this,arguments):void n(e,{declarative:!0,deps:r,declare:o})}function t(e,r,t,o){n(e,{declarative:!1,deps:r,executingRequire:t,execute:o})}function n(e,r){r.name=e,e in v||(v[e]=r),r.normalizedDeps=r.deps}function o(e,r){if(r[e.groupIndex]=r[e.groupIndex]||[],-1==g.call(r[e.groupIndex],e)){r[e.groupIndex].push(e);for(var t=0,n=e.normalizedDeps.length;n>t;t++){var a=e.normalizedDeps[t],u=v[a];if(u&&!u.evaluated){var d=e.groupIndex+(u.declarative!=e.declarative);if(void 0===u.groupIndex||u.groupIndex<d){if(void 0!==u.groupIndex&&(r[u.groupIndex].splice(g.call(r[u.groupIndex],u),1),0==r[u.groupIndex].length))throw new TypeError("Mixed dependency cycle detected");u.groupIndex=d}o(u,r)}}}}function a(e){var r=v[e];r.groupIndex=0;var t=[];o(r,t);for(var n=!!r.declarative==t.length%2,a=t.length-1;a>=0;a--){for(var u=t[a],i=0;i<u.length;i++){var s=u[i];n?d(s):l(s)}n=!n}}function u(e){return y[e]||(y[e]={name:e,dependencies:[],exports:{},importers:[]})}function d(r){if(!r.module){var t=r.module=u(r.name),n=r.module.exports,o=r.declare.call(e,function(e,r){if(t.locked=!0,"object"==typeof e)for(var o in e)n[o]=e[o];else n[e]=r;for(var a=0,u=t.importers.length;u>a;a++){var d=t.importers[a];if(!d.locked)for(var i=0;i<d.dependencies.length;++i)d.dependencies[i]===t&&d.setters[i](n)}return t.locked=!1,r},{id:r.name});t.setters=o.setters,t.execute=o.execute;for(var a=0,i=r.normalizedDeps.length;i>a;a++){var l,s=r.normalizedDeps[a],c=v[s],f=y[s];f?l=f.exports:c&&!c.declarative?l=c.esModule:c?(d(c),f=c.module,l=f.exports):l=p(s),f&&f.importers?(f.importers.push(t),t.dependencies.push(f)):t.dependencies.push(null),t.setters[a]&&t.setters[a](l)}}}function i(e){var r,t=v[e];if(t)t.declarative?f(e,[]):t.evaluated||l(t),r=t.module.exports;else if(r=p(e),!r)throw new Error("Unable to load dependency "+e+".");return(!t||t.declarative)&&r&&r.__useDefault?r["default"]:r}function l(r){if(!r.module){var t={},n=r.module={exports:t,id:r.name};if(!r.executingRequire)for(var o=0,a=r.normalizedDeps.length;a>o;o++){var u=r.normalizedDeps[o],d=v[u];d&&l(d)}r.evaluated=!0;var c=r.execute.call(e,function(e){for(var t=0,n=r.deps.length;n>t;t++)if(r.deps[t]==e)return i(r.normalizedDeps[t]);throw new TypeError("Module "+e+" not declared as a dependency.")},t,n);void 0!==c&&(n.exports=c),t=n.exports,t&&t.__esModule?r.esModule=t:r.esModule=s(t)}}function s(r){var t={};if(("object"==typeof r||"function"==typeof r)&&r!==e)if(m)for(var n in r)"default"!==n&&c(t,r,n);else{var o=r&&r.hasOwnProperty;for(var n in r)"default"===n||o&&!r.hasOwnProperty(n)||(t[n]=r[n])}return t["default"]=r,x(t,"__useDefault",{value:!0}),t}function c(e,r,t){try{var n;(n=Object.getOwnPropertyDescriptor(r,t))&&x(e,t,n)}catch(o){return e[t]=r[t],!1}}function f(r,t){var n=v[r];if(n&&!n.evaluated&&n.declarative){t.push(r);for(var o=0,a=n.normalizedDeps.length;a>o;o++){var u=n.normalizedDeps[o];-1==g.call(t,u)&&(v[u]?f(u,t):p(u))}n.evaluated||(n.evaluated=!0,n.module.execute.call(e))}}function p(e){if(I[e])return I[e];if("@node/"==e.substr(0,6))return I[e]=s(D(e.substr(6)));var r=v[e];if(!r)throw"Module "+e+" not present.";return a(e),f(e,[]),v[e]=void 0,r.declarative&&x(r.module.exports,"__esModule",{value:!0}),I[e]=r.declarative?r.module.exports:r.esModule}var v={},g=Array.prototype.indexOf||function(e){for(var r=0,t=this.length;t>r;r++)if(this[r]===e)return r;return-1},m=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(h){m=!1}var x;!function(){try{Object.defineProperty({},"a",{})&&(x=Object.defineProperty)}catch(e){x=function(e,r,t){try{e[r]=t.value||t.get.call(e)}catch(n){}}}}();var y={},D="undefined"!=typeof System&&System._nodeRequire||"undefined"!=typeof require&&"undefined"!=typeof require.resolve&&"undefined"!=typeof process&&process.platform&&require,I={"@empty":{}};return function(e,n,o,a){return function(u){u(function(u){for(var d={_nodeRequire:D,register:r,registerDynamic:t,get:p,set:function(e,r){I[e]=r},newModule:function(e){return e}},i=0;i<n.length;i++)(function(e,r){r&&r.__esModule?I[e]=r:I[e]=s(r)})(n[i],arguments[i]);a(d);var l=p(e[0]);if(e.length>1)for(var i=1;i<e.length;i++)p(e[i]);return o?l["default"]:l})}}}("undefined"!=typeof self?self:global)

(["testing/tests/Renovation/widgets.json"], [], true, function($__System) {
var require = this.require, exports = this.exports, module = this.module;
$__System.registerDynamic("testing/tests/Renovation/widgets.json", [], true, function ($__require, exports, module) {
  var global = this || self,
      GLOBAL = global;
  module.exports = [{ "widgetName": "dxButton", "name": "Button", "decorator": { "defaultOptionRules": "defaultOptionRules", "jQuery": { "component": "BaseComponent", "register": "true" }, "view": "viewFunction" }, "props": { "allProps": ["activeStateEnabled", "hoverStateEnabled", "icon", "iconPosition", "onClick", "onSubmit", "pressed", "stylingMode", "template", "iconTemplate", "children", "text", "type", "useInkRipple", "useSubmitBehavior", "templateData", "className", "accessKey", "disabled", "focusStateEnabled", "height", "hint", "onKeyDown", "rtlEnabled", "tabIndex", "visible", "width"], "oneWay": ["activeStateEnabled", "hoverStateEnabled", "icon", "iconPosition", "pressed", "stylingMode", "text", "type", "useInkRipple", "useSubmitBehavior", "templateData", "className", "accessKey", "disabled", "focusStateEnabled", "height", "hint", "rtlEnabled", "tabIndex", "visible", "width"], "twoWay": [], "template": ["template", "iconTemplate"], "event": ["onClick", "onSubmit", "onKeyDown"], "ref": [], "slot": ["children"] }, "api": ["focus", "activate", "deactivate"], "path": "../../../js/renovation/ui/button.tsx" }, { "widgetName": "dxBox", "name": "Box", "decorator": { "defaultOptionRules": "null", "jQuery": { "register": "true" }, "view": "viewFunction" }, "props": { "allProps": ["direction", "align", "crossAlign"], "oneWay": ["direction", "align", "crossAlign"], "twoWay": [], "template": [], "event": [], "ref": [], "slot": [] }, "api": [], "path": "../../../js/renovation/ui/box/box.tsx" }, { "widgetName": "dxWidget", "name": "Widget", "decorator": { "defaultOptionRules": "null", "jQuery": { "register": "true" }, "view": "viewFunction" }, "props": { "allProps": ["rootElementRef", "_feedbackHideTimeout", "_feedbackShowTimeout", "activeStateUnit", "cssText", "aria", "children", "classes", "name", "addWidgetClass", "onActive", "onDimensionChanged", "onInactive", "onVisibilityChange", "onFocusIn", "onFocusOut", "onHoverStart", "onHoverEnd", "onRootElementRendered", "className", "accessKey", "activeStateEnabled", "disabled", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "onClick", "onKeyDown", "rtlEnabled", "tabIndex", "visible", "width"], "oneWay": ["_feedbackHideTimeout", "_feedbackShowTimeout", "activeStateUnit", "cssText", "aria", "classes", "name", "addWidgetClass", "className", "accessKey", "activeStateEnabled", "disabled", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "rtlEnabled", "tabIndex", "visible", "width"], "twoWay": [], "template": [], "event": ["onActive", "onDimensionChanged", "onInactive", "onVisibilityChange", "onFocusIn", "onFocusOut", "onHoverStart", "onHoverEnd", "onRootElementRendered", "onClick", "onKeyDown"], "ref": [], "slot": ["children"] }, "api": ["focus", "blur", "activate", "deactivate"], "path": "../../../js/renovation/ui/common/widget.tsx" }, { "widgetName": "dxForm", "name": "Form", "decorator": { "defaultOptionRules": "null", "jQuery": { "register": "true" }, "view": "viewFunction" }, "props": { "allProps": ["scrollingEnabled", "useNativeScrolling", "screenByWidth"], "oneWay": ["scrollingEnabled", "useNativeScrolling", "screenByWidth"], "twoWay": [], "template": [], "event": [], "ref": [], "slot": [] }, "api": [], "path": "../../../js/renovation/ui/form/form.tsx" }, { "widgetName": "dxPager", "name": "Pager", "decorator": { "defaultOptionRules": "null", "jQuery": { "register": "true", "component": "GridPagerWrapper" }, "view": "viewFunction" }, "props": { "allProps": ["pageSize", "pageIndex", "defaultPageSize", "pageSizeChange", "defaultPageIndex", "pageIndexChange", "gridCompatibility", "className", "showInfo", "infoText", "lightModeEnabled", "displayMode", "maxPagesCount", "pageCount", "pagesCountText", "visible", "hasKnownLastPage", "pagesNavigatorVisible", "showPageSizes", "pageSizes", "rtlEnabled", "showNavigationButtons", "totalCount", "label", "onKeyDown"], "oneWay": ["defaultPageSize", "defaultPageIndex", "gridCompatibility", "className", "showInfo", "infoText", "lightModeEnabled", "displayMode", "maxPagesCount", "pageCount", "pagesCountText", "visible", "hasKnownLastPage", "pagesNavigatorVisible", "showPageSizes", "pageSizes", "rtlEnabled", "showNavigationButtons", "totalCount", "label"], "twoWay": ["pageSize", "pageIndex"], "template": [], "event": ["pageSizeChange", "pageIndexChange", "onKeyDown"], "ref": [], "slot": [] }, "api": [], "path": "../../../js/renovation/ui/pager/pager.tsx" }, { "widgetName": "dxResponsiveBox", "name": "ResponsiveBox", "decorator": { "defaultOptionRules": "null", "jQuery": { "register": "true" }, "view": "viewFunction" }, "props": { "allProps": ["screenByWidth"], "oneWay": ["screenByWidth"], "twoWay": [], "template": [], "event": [], "ref": [], "slot": [] }, "api": [], "path": "../../../js/renovation/ui/responsive_box/responsive_box.tsx" }, { "widgetName": "dxScheduler", "name": "Scheduler", "decorator": { "defaultOptionRules": "null", "view": "viewFunction", "jQuery": { "register": "true" } }, "props": { "allProps": ["adaptivityEnabled", "appointmentDragging", "crossScrollingEnabled", "currentDate", "currentView", "dataSource", "dateSerializationFormat", "descriptionExpr", "editing", "focusStateEnabled", "groupByDate", "indicatorUpdateInterval", "max", "min", "noDataText", "recurrenceEditMode", "remoteFiltering", "resources", "scrolling", "selectedCellData", "shadeUntilCurrentTime", "showAllDayPanel", "showCurrentTimeIndicator", "timeZone", "useDropDownViewSwitcher", "views", "endDayHour", "startDayHour", "firstDayOfWeek", "cellDuration", "groups", "maxAppointmentsPerCell", "customizeDateNavigatorText", "onAppointmentAdded", "onAppointmentAdding", "onAppointmentClick", "onAppointmentContextMenu", "onAppointmentDblClick", "onAppointmentDeleted", "onAppointmentDeleting", "onAppointmentFormOpening", "onAppointmentRendered", "onAppointmentUpdated", "onAppointmentUpdating", "onCellClick", "onCellContextMenu", "recurrenceExceptionExpr", "recurrenceRuleExpr", "startDateExpr", "startDateTimeZoneExpr", "endDateExpr", "endDateTimeZoneExpr", "allDayExpr", "textExpr", "allDayPanelMode", "dataCellTemplate", "dateCellTemplate", "timeCellTemplate", "resourceCellTemplate", "appointmentCollectorTemplate", "appointmentTemplate", "appointmentTooltipTemplate", "toolbar", "defaultCurrentDate", "currentDateChange", "defaultCurrentView", "currentViewChange", "className", "accessKey", "activeStateEnabled", "disabled", "height", "hint", "hoverStateEnabled", "onClick", "onKeyDown", "rtlEnabled", "tabIndex", "visible", "width"], "oneWay": ["adaptivityEnabled", "appointmentDragging", "crossScrollingEnabled", "dataSource", "dateSerializationFormat", "descriptionExpr", "editing", "focusStateEnabled", "groupByDate", "indicatorUpdateInterval", "max", "min", "noDataText", "recurrenceEditMode", "remoteFiltering", "resources", "scrolling", "selectedCellData", "shadeUntilCurrentTime", "showAllDayPanel", "showCurrentTimeIndicator", "timeZone", "useDropDownViewSwitcher", "views", "endDayHour", "startDayHour", "firstDayOfWeek", "cellDuration", "groups", "maxAppointmentsPerCell", "customizeDateNavigatorText", "recurrenceExceptionExpr", "recurrenceRuleExpr", "startDateExpr", "startDateTimeZoneExpr", "endDateExpr", "endDateTimeZoneExpr", "allDayExpr", "textExpr", "allDayPanelMode", "toolbar", "defaultCurrentDate", "defaultCurrentView", "className", "accessKey", "activeStateEnabled", "disabled", "height", "hint", "hoverStateEnabled", "rtlEnabled", "tabIndex", "visible", "width"], "twoWay": ["currentDate", "currentView"], "template": ["dataCellTemplate", "dateCellTemplate", "timeCellTemplate", "resourceCellTemplate", "appointmentCollectorTemplate", "appointmentTemplate", "appointmentTooltipTemplate"], "event": ["onAppointmentAdded", "onAppointmentAdding", "onAppointmentClick", "onAppointmentContextMenu", "onAppointmentDblClick", "onAppointmentDeleted", "onAppointmentDeleting", "onAppointmentFormOpening", "onAppointmentRendered", "onAppointmentUpdated", "onAppointmentUpdating", "onCellClick", "onCellContextMenu", "currentDateChange", "currentViewChange", "onClick", "onKeyDown"], "ref": [], "slot": [] }, "api": ["addAppointment", "deleteAppointment", "updateAppointment", "getDataSource", "getEndViewDate", "getStartViewDate", "hideAppointmentPopup", "hideAppointmentTooltip", "scrollTo", "scrollToTime", "showAppointmentPopup", "showAppointmentTooltip"], "path": "../../../js/renovation/ui/scheduler/scheduler.tsx" }, { "widgetName": "dxScrollView", "name": "ScrollView", "decorator": { "defaultOptionRules": "null", "jQuery": { "register": "true", "component": "ScrollViewWrapper" }, "view": "viewFunction" }, "props": { "allProps": ["pullDownEnabled", "reachBottomEnabled", "useNative", "useSimulatedScrollbar", "refreshStrategy", "inertiaEnabled", "useKeyboard", "showScrollbar", "scrollByThumb", "onVisibilityChange", "onStart", "onEnd", "onBounce", "scrollLocationChange", "loadPanelTemplate", "children", "aria", "addWidgetClass", "disabled", "height", "width", "visible", "rtlEnabled", "classes", "direction", "bounceEnabled", "scrollByContent", "forceGeneratePockets", "needScrollViewContentWrapper", "needRenderScrollbars", "onScroll", "onUpdated", "onPullDown", "onReachBottom", "pullingDownText", "pulledDownText", "refreshingText", "reachBottomText"], "oneWay": ["pullDownEnabled", "reachBottomEnabled", "useNative", "useSimulatedScrollbar", "refreshStrategy", "inertiaEnabled", "useKeyboard", "showScrollbar", "scrollByThumb", "aria", "addWidgetClass", "disabled", "height", "width", "visible", "rtlEnabled", "classes", "direction", "bounceEnabled", "scrollByContent", "forceGeneratePockets", "needScrollViewContentWrapper", "needRenderScrollbars", "pullingDownText", "pulledDownText", "refreshingText", "reachBottomText"], "twoWay": [], "template": ["loadPanelTemplate"], "event": ["onVisibilityChange", "onStart", "onEnd", "onBounce", "scrollLocationChange", "onScroll", "onUpdated", "onPullDown", "onReachBottom"], "ref": [], "slot": ["children"] }, "api": ["release", "refresh", "content", "container", "scrollBy", "scrollTo", "scrollToElement", "scrollHeight", "scrollWidth", "scrollOffset", "scrollTop", "scrollLeft", "clientHeight", "clientWidth", "toggleLoading", "startLoading", "finishLoading", "updateHandler"], "path": "../../../js/renovation/ui/scroll_view/scroll_view.tsx" }, { "widgetName": "dxScrollable", "name": "Scrollable", "decorator": { "defaultOptionRules": "null", "jQuery": { "register": "true", "component": "ScrollableWrapper" }, "view": "viewFunction" }, "props": { "allProps": ["useNative", "useSimulatedScrollbar", "refreshStrategy", "inertiaEnabled", "useKeyboard", "showScrollbar", "scrollByThumb", "onVisibilityChange", "onStart", "onEnd", "onBounce", "scrollLocationChange", "loadPanelTemplate", "children", "aria", "addWidgetClass", "disabled", "height", "width", "visible", "rtlEnabled", "classes", "direction", "bounceEnabled", "scrollByContent", "pullDownEnabled", "reachBottomEnabled", "forceGeneratePockets", "needScrollViewContentWrapper", "needRenderScrollbars", "onScroll", "onUpdated", "onPullDown", "onReachBottom", "pullingDownText", "pulledDownText", "refreshingText", "reachBottomText"], "oneWay": ["useNative", "useSimulatedScrollbar", "refreshStrategy", "inertiaEnabled", "useKeyboard", "showScrollbar", "scrollByThumb", "aria", "addWidgetClass", "disabled", "height", "width", "visible", "rtlEnabled", "classes", "direction", "bounceEnabled", "scrollByContent", "pullDownEnabled", "reachBottomEnabled", "forceGeneratePockets", "needScrollViewContentWrapper", "needRenderScrollbars", "pullingDownText", "pulledDownText", "refreshingText", "reachBottomText"], "twoWay": [], "template": ["loadPanelTemplate"], "event": ["onVisibilityChange", "onStart", "onEnd", "onBounce", "scrollLocationChange", "onScroll", "onUpdated", "onPullDown", "onReachBottom"], "ref": [], "slot": ["children"] }, "api": ["content", "container", "scrollTo", "scrollBy", "updateHandler", "release", "refresh", "scrollToElement", "scrollHeight", "scrollWidth", "scrollOffset", "scrollTop", "scrollLeft", "clientHeight", "clientWidth", "getScrollElementPosition", "startLoading", "finishLoading"], "path": "../../../js/renovation/ui/scroll_view/scrollable.tsx" }, { "widgetName": "dxBullet", "name": "Bullet", "decorator": { "defaultOptionRules": "null", "view": "viewFunction", "jQuery": { "register": "true" } }, "props": { "allProps": ["value", "color", "target", "targetColor", "targetWidth", "showTarget", "showZeroLevel", "startScaleValue", "endScaleValue", "tooltip", "onTooltipHidden", "onTooltipShown", "children", "size", "margin", "disabled", "rtlEnabled", "classes", "className", "defaultCanvas", "canvas", "pointerEvents", "canvasChange"], "oneWay": ["value", "color", "target", "targetColor", "targetWidth", "showTarget", "showZeroLevel", "startScaleValue", "endScaleValue", "tooltip", "size", "margin", "disabled", "rtlEnabled", "classes", "className", "defaultCanvas", "pointerEvents"], "twoWay": ["canvas"], "template": [], "event": ["onTooltipHidden", "onTooltipShown", "canvasChange"], "ref": [], "slot": ["children"] }, "api": [], "path": "../../../js/renovation/viz/sparklines/bullet.tsx" }, { "widgetName": "dxForm", "name": "Form", "decorator": { "defaultOptionRules": "null", "jQuery": { "register": "true" }, "view": "viewFunction" }, "props": { "allProps": ["showValidationSummary", "scrollingEnabled", "showColonAfterLabel", "labelLocation", "colCountByScreen", "colCount", "items", "formData", "className", "accessKey", "activeStateEnabled", "disabled", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "onClick", "onKeyDown", "rtlEnabled", "tabIndex", "visible", "width"], "oneWay": ["showValidationSummary", "scrollingEnabled", "showColonAfterLabel", "labelLocation", "colCountByScreen", "colCount", "items", "formData", "className", "accessKey", "activeStateEnabled", "disabled", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "rtlEnabled", "tabIndex", "visible", "width"], "twoWay": [], "template": [], "event": ["onClick", "onKeyDown"], "ref": [], "slot": [] }, "api": [], "path": "../../../js/renovation/ui/form/wrapper/form.tsx" }, { "widgetName": "dxCheckBox", "name": "CheckBox", "decorator": { "jQuery": { "component": "BaseComponent", "register": "true" }, "view": "viewFunction" }, "props": { "allProps": ["text", "iconSize", "enableThreeStateBehavior", "activeStateEnabled", "hoverStateEnabled", "focusStateEnabled", "value", "saveValueChangeEvent", "defaultValue", "valueChange", "readOnly", "name", "validationError", "validationErrors", "validationMessageMode", "validationMessagePosition", "validationStatus", "isValid", "inputAttr", "onFocusIn", "className", "accessKey", "disabled", "height", "hint", "onClick", "onKeyDown", "rtlEnabled", "tabIndex", "visible", "width", "aria"], "oneWay": ["text", "iconSize", "enableThreeStateBehavior", "activeStateEnabled", "hoverStateEnabled", "focusStateEnabled", "saveValueChangeEvent", "defaultValue", "readOnly", "name", "validationError", "validationErrors", "validationMessageMode", "validationMessagePosition", "validationStatus", "isValid", "inputAttr", "className", "accessKey", "disabled", "height", "hint", "rtlEnabled", "tabIndex", "visible", "width", "aria"], "twoWay": ["value"], "template": [], "event": ["valueChange", "onFocusIn", "onClick", "onKeyDown"], "ref": [], "slot": [] }, "api": ["focus", "blur"], "path": "../../../js/renovation/ui/editors/check_box/check_box.tsx" }, { "widgetName": "dxEditor", "name": "Editor", "decorator": { "jQuery": { "component": "EditorWrapperComponent", "register": "true" }, "view": "viewFunction" }, "props": { "allProps": ["readOnly", "name", "value", "validationError", "validationErrors", "validationMessageMode", "validationMessagePosition", "validationStatus", "isValid", "inputAttr", "onFocusIn", "defaultValue", "valueChange", "className", "accessKey", "activeStateEnabled", "disabled", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "onClick", "onKeyDown", "rtlEnabled", "tabIndex", "visible", "width", "aria", "children", "classes"], "oneWay": ["readOnly", "name", "validationError", "validationErrors", "validationMessageMode", "validationMessagePosition", "validationStatus", "isValid", "inputAttr", "defaultValue", "className", "accessKey", "activeStateEnabled", "disabled", "focusStateEnabled", "height", "hint", "hoverStateEnabled", "rtlEnabled", "tabIndex", "visible", "width", "aria", "classes"], "twoWay": ["value"], "template": [], "event": ["onFocusIn", "valueChange", "onClick", "onKeyDown"], "ref": [], "slot": ["children"] }, "api": ["focus", "blur"], "path": "../../../js/renovation/ui/editors/common/editor.tsx" }, { "widgetName": "dxAppointmentLayout", "name": "AppointmentLayout", "decorator": { "defaultOptionRules": "null", "view": "viewFunction", "jQuery": { "register": "true" } }, "props": { "allProps": ["isAllDay"], "oneWay": ["isAllDay"], "twoWay": [], "template": [], "event": [], "ref": [], "slot": [] }, "api": [], "path": "../../../js/renovation/ui/scheduler/appointment/layout.tsx" }, { "widgetName": "dxMonthDateTableLayout", "name": "MonthDateTableLayout", "decorator": { "defaultOptionRules": "null", "view": "viewFunction", "jQuery": { "register": "true", "component": "DateTable" } }, "props": { "allProps": ["cellTemplate", "tableRef", "viewData", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "topVirtualRowHeight", "bottomVirtualRowHeight", "addDateTableClass", "addVerticalSizesClassToRows", "width", "dataCellTemplate"], "oneWay": ["viewData", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "topVirtualRowHeight", "bottomVirtualRowHeight", "addDateTableClass", "addVerticalSizesClassToRows", "width"], "twoWay": [], "template": ["cellTemplate", "dataCellTemplate"], "event": [], "ref": [], "slot": [] }, "api": [], "path": "../../../js/renovation/ui/scheduler/workspaces/month/date_table/layout.tsx" }, { "widgetName": "dxTimelineHeaderPanelLayout", "name": "TimelineHeaderPanelLayout", "decorator": { "defaultOptionRules": "null", "view": "viewFunction", "jQuery": { "register": "true", "component": "HeaderPanel" } }, "props": { "allProps": ["dateHeaderData", "isRenderDateHeader", "dateCellTemplate", "timeCellTemplate", "dateHeaderTemplate", "groups", "groupOrientation", "elementRef", "groupPanelData", "groupByDate", "height", "className", "resourceCellTemplate"], "oneWay": ["dateHeaderData", "isRenderDateHeader", "groups", "groupOrientation", "groupPanelData", "groupByDate", "height", "className"], "twoWay": [], "template": ["dateCellTemplate", "timeCellTemplate", "dateHeaderTemplate", "resourceCellTemplate"], "event": [], "ref": [], "slot": [] }, "api": [], "path": "../../../js/renovation/ui/scheduler/workspaces/timeline/header_panel/layout.tsx" }, { "widgetName": "dxHeaderPanelLayout", "name": "HeaderPanelLayout", "decorator": { "defaultOptionRules": "null", "view": "viewFunction", "jQuery": { "register": "true", "component": "HeaderPanel" } }, "props": { "allProps": ["dateHeaderData", "isRenderDateHeader", "dateCellTemplate", "timeCellTemplate", "dateHeaderTemplate", "groups", "groupOrientation", "elementRef", "groupPanelData", "groupByDate", "height", "className", "resourceCellTemplate"], "oneWay": ["dateHeaderData", "isRenderDateHeader", "groups", "groupOrientation", "groupPanelData", "groupByDate", "height", "className"], "twoWay": [], "template": ["dateCellTemplate", "timeCellTemplate", "dateHeaderTemplate", "resourceCellTemplate"], "event": [], "ref": [], "slot": [] }, "api": [], "path": "../../../js/renovation/ui/scheduler/workspaces/base/header_panel/layout.tsx" }, { "widgetName": "dxDateTableLayoutBase", "name": "DateTableLayoutBase", "decorator": { "defaultOptionRules": "null", "view": "viewFunction", "jQuery": { "register": "true", "component": "DateTable" } }, "props": { "allProps": ["cellTemplate", "tableRef", "viewData", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "topVirtualRowHeight", "bottomVirtualRowHeight", "addDateTableClass", "addVerticalSizesClassToRows", "width", "dataCellTemplate"], "oneWay": ["viewData", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "topVirtualRowHeight", "bottomVirtualRowHeight", "addDateTableClass", "addVerticalSizesClassToRows", "width"], "twoWay": [], "template": ["cellTemplate", "dataCellTemplate"], "event": [], "ref": [], "slot": [] }, "api": [], "path": "../../../js/renovation/ui/scheduler/workspaces/base/date_table/layout.tsx" }, { "widgetName": "dxTimePanelTableLayout", "name": "TimePanelTableLayout", "decorator": { "defaultOptionRules": "null", "view": "viewFunction", "jQuery": { "register": "true", "component": "TimePanel" } }, "props": { "allProps": ["groupOrientation", "timePanelData", "timeCellTemplate", "tableRef"], "oneWay": ["groupOrientation", "timePanelData"], "twoWay": [], "template": ["timeCellTemplate"], "event": [], "ref": [], "slot": [] }, "api": [], "path": "../../../js/renovation/ui/scheduler/workspaces/base/time_panel/layout.tsx" }, { "widgetName": "dxGroupPanel", "name": "GroupPanel", "decorator": { "defaultOptionRules": "null", "view": "viewFunction", "jQuery": { "register": "true", "component": "GroupPanelWrapper" } }, "props": { "allProps": ["groups", "groupOrientation", "elementRef", "groupPanelData", "groupByDate", "height", "className", "resourceCellTemplate"], "oneWay": ["groups", "groupOrientation", "groupPanelData", "groupByDate", "height", "className"], "twoWay": [], "template": ["resourceCellTemplate"], "event": [], "ref": [], "slot": [] }, "api": [], "path": "../../../js/renovation/ui/scheduler/workspaces/base/group_panel/group_panel.tsx" }, { "widgetName": "dxAllDayTable", "name": "AllDayTable", "decorator": { "defaultOptionRules": "null", "view": "viewFunction", "jQuery": { "register": "true", "component": "DateTable" } }, "props": { "allProps": ["tableRef", "viewData", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "topVirtualRowHeight", "bottomVirtualRowHeight", "addDateTableClass", "addVerticalSizesClassToRows", "width", "dataCellTemplate"], "oneWay": ["viewData", "groupOrientation", "leftVirtualCellWidth", "rightVirtualCellWidth", "topVirtualRowHeight", "bottomVirtualRowHeight", "addDateTableClass", "addVerticalSizesClassToRows", "width"], "twoWay": [], "template": ["dataCellTemplate"], "event": [], "ref": [], "slot": [] }, "api": [], "path": "../../../js/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/table.tsx" }, { "widgetName": "dxAllDayPanelTitle", "name": "AllDayPanelTitle", "decorator": { "defaultOptionRules": "null", "view": "viewFunction", "jQuery": { "register": "true" } }, "props": { "allProps": [], "oneWay": [], "twoWay": [], "template": [], "event": [], "ref": [], "slot": [] }, "api": [], "path": "../../../js/renovation/ui/scheduler/workspaces/base/date_table/all_day_panel/title.tsx" }];
});
})
(function(factory) {
  if (typeof define == 'function' && define.amd)
    define([], factory);
  else if (typeof module == 'object' && module.exports && typeof require == 'function')
    module.exports = factory();
  else
    factory();
});
//# sourceMappingURL=widgets.json.map